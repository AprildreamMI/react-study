import React from 'react';import ReactDOM from 'react-dom';import './index.css';function calculateWinner(squares) {  const lines = [    [0, 1, 2],    [3, 4, 5],    [6, 7, 8],    [0, 3, 6],    [1, 4, 7],    [2, 5, 8],    [0, 4, 8],    [2, 4, 6],  ];  for (let i = 0; i < lines.length; i++) {    const [a, b, c] = lines[i];    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {      return squares[a];    }  }  return null;}//渲染一个单独的button/*class Square extends React.Component {  render() {    return (      <button        className="square"        onClick={() => this.props.onClick()}>        { this.props.value }      </button>    );  }}*/// 函数组件 Squarefunction Square(props) {  return (    <button      className="square"      onClick={props.onClick}>      { props.value }    </button>  )}// 期盼 渲染九个方格class Board extends React.Component {  constructor (props) {    super(props);    this.state = {      // 棋子数组      squares: Array(9).fill(null),      // 标记玩家的标识      xIsNext: true    }  }  //当棋子被点击  handleClick (i) {    // 返回一个新数组    let squares = this.state.squares.slice();    if (calculateWinner(squares) || squares[i]) return;    squares[i] = this.state.xIsNext ? 'X' : 'O';    this.setState({      squares,      // 反转      xIsNext: !this.state.xIsNext    })  }  // 返回每个格子的状态值  renderSquare(i) {    return (      <Square        value={ this.state.squares[i] }        onClick={() => this.handleClick(i)}      />    );  }  render() {    const winner = calculateWinner(this.state.squares);    let status;    // 通过有值和无值来标记输赢    if (winner) {      status = 'Winner' + winner    } else {      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;    }    return (      <div>        <div className="status">{status}</div>        <div className="board-row">          {this.renderSquare(0)}          {this.renderSquare(1)}          {this.renderSquare(2)}        </div>        <div className="board-row">          {this.renderSquare(3)}          {this.renderSquare(4)}          {this.renderSquare(5)}        </div>        <div className="board-row">          {this.renderSquare(6)}          {this.renderSquare(7)}          {this.renderSquare(8)}        </div>      </div>    );  }}class Game extends React.Component {  render() {    return (      <div className="game">        <div className="game-board">          <Board />        </div>        <div className="game-info">          <div>{/* status */}</div>          <ol>{/* TODO */}</ol>        </div>      </div>    );  }}// ========================================ReactDOM.render(  <Game />,  document.getElementById('root'));